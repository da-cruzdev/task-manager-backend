# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Task {
  id: Int!
  title: String!
  description: String!
  status: TaskStatus!
  assignedToId: Float!
  deadline: DateTime
  owner: User!
  assignUser: User!
}

"""Statut de la t√¢che"""
enum TaskStatus {
  PENDING
  IN_PROGRESS
  DONE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Int!
  username: String!
  email: String!
  role: String!
  createdTasks: [Task!]!
  assignedTasks: [Task!]!
}

type UpdateUserResponse {
  updatedUser: User!
  accessToken: String!
  refreshToken: String!
}

type SignResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

type LogoutResponse {
  loggedOut: Boolean!
}

type NewTokenResponse {
  accessToken: String!
  refreshToken: String!
}

type ResponseWithPagination {
  data: [Task!]
  totalCount: Int
}

type Query {
  users: [User!]!
  user(email: String!): User!
  getUserInfo: User!
  tasks(filterOptions: TasksFilterOptions): [Task!]!
  task(id: Int!): Task!
  createdTasks(filterOptions: TasksFilterOptions, paginationOptions: PaginationOptions): ResponseWithPagination!
  assignedTasks(filterOptions: TasksFilterOptions, paginationOptions: PaginationOptions): ResponseWithPagination!
}

input TasksFilterOptions {
  query: String
  status: String
}

input PaginationOptions {
  skip: Int
  take: Int
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!): UpdateUserResponse!
  removeUser(id: Int!): User!
  Signup(signupInput: SignupInput!): SignResponse!
  Signin(signinInput: SigninInput!): SignResponse!
  Logout(id: Int!): LogoutResponse!
  GetNewTokens: NewTokenResponse!
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(id: Int!, data: UpdateTaskInput!): Task!
  removeTask(id: Int!): Task!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  username: String
  email: String
  password: String
  oldPassword: String!
  newPassword: String!
}

input SignupInput {
  username: String!
  email: String!
  password: String!
}

input SigninInput {
  email: String!
  password: String!
}

input CreateTaskInput {
  title: String!
  description: String!
  assignedTo: Float!
  deadline: DateTime!
}

input UpdateTaskInput {
  title: String
  description: String
  assignedTo: Float
  deadline: DateTime
  status: String!
}